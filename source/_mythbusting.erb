
<section id="mythbusters" class="hidden bg-blue-dark text-white">
    <div class="container mx-auto px-4 sm:px-8 xl:px-16 xxl:px-48 py-4 sm:py-8 xl:py-24">
        <h2 class="text-4xl lg:text-5xl mb-4 xl:mb-8">Did you know...?</h2>
    <div class="container bg-white text-blue-dark text-center mx-auto bg-orange-shadow" style="transform: rotate(-4deg)">
    <div class="container bg-white text-blue-dark text-center mx-auto px-4 sm:px-8 xl:px-16 xxl:px-24 py-4 xl:py-16" style="transform: rotate(4deg)">
        <%#<p class="text-lg my-4 leading-tight"><span id="mb-progress-current-question"></span> of <span id="mb-progress-total-questions"></span></p>%>
        <p id="mb-question" class="text-blue text-xl xl:text-4xl text-white xl:mt-4 mb-4 xl:mb-8 leading-tight"></p>
        <div id="mb-answer-options" class="mb-4">
            <button id="mb-true" class="bg-blue-dark text-white text-xl border-blue-dark px-8 xl:px-16 py-1 xl:py-4 mr-2">True</button>
            <button id="mb-false" class="bg-blue-dark text-white text-xl border-blue-dark px-8 xl:px-16 py-1 xl:py-4 ml-2">False</button>
        </div>
        <p id="mb-answer-true" class="hidden text-2xl xl:text-4xl text-green px-8 xl:px-16 mb-4 xl:mb-8">
            True!
        </p>
        <p id="mb-answer-false" class="hidden text-2xl xl:text-4xl text-orange px-8 xl:px-16 mb-4 xl:mb-8">
            False!
        </p>
        <p id="mb-reason" class="hidden text-md xl:text-xl leading-tight xl:mx-32 mb-4 xl:mb-8"></p>
        <%#<p class="text-md leading-tight mb-4 xl:mb-8">Your score: <span id="mb-score-correct-answers"></span> / <span id="mb-score-total-questions"></span></p>%>
        <div id="mb-nav" class="mb-4">
            <%#<button id="mb-prev" class="hidden bg-blue-dark text-white hover:bg-orange hover:text-blue-dark disabled:opacity-25 text-xl border-blue-dark px-8 xl:px-16 py-4 mr-2">Previous question</button>%>
            <button id="mb-next" class="bg-blue-dark text-white hover:bg-orange hover:text-blue-dark disabled:opacity-25 text-xl border-blue-dark px-8 xl:px-16 py-1 xl:py-4 mr-2">Next question</button>
        </div>
    </div>
    </div>
    <p class="mt-8 xl:mt-16">
    <%= link_to "Find out more in our FAQs", "/faq.html", class: "text-orange text-base xs:text-lg sm:text-xl lg:text-2xl bg-contain bg-no-repeat bg-right pr-12 py-1", style: "background-image:url(/svg/orange_arrow_right.svg)" %>
    </div>
</section>
<script>
    // The list of questions
    var myths = [
        {
            "question": "Aviation is responsible for 2% of global emissions",
            "answer": "false",
            "reason": "The true figure is closer to 3.5% – but that’s only because less than 20% of the global population has ever been on a plane.",
        },

        {
            "question": "Flights for work and business make up the highest proportion of flights",
            "answer": "false",
            "reason": "Business flights make up only 10% of flights from the UK. The majority of flights (63%) are for holidays.",
        },
        {
            "question": "I would save more CO2 by being vegan than by stopping flying",
            "answer": "false",
            "reason": "While we recommend veganism as a great way to cut your carbon footprint, the amount of carbon you save by being vegan for a year could be cancelled out with just one flight.",
        },
        {
            "question": "We can solve the problem of aviation emissions with technology",
            "answer": "false",
            "reason": "Green techno-fixes such as electric flights, hydrogen and sustainable fuels might reduce emissions from aviation, but on their own they are not enough – especially as it is many years before low-carbon options for flying will be available.",
        },
        {
            "question": "If I buy a carbon offset I can fly carbon neutral",
            "answer": "false",
            "reason": "No carbon offset will prevent CO2 from coming out of an aircraft, and it’s unlikely that the offset will absorb the necessary carbon – especially as many of the offsets we rely on end up burning in forest fires.",
        }
    ];
    // Let's store our answers
    var myth_answers = [];
    // Which question are we on?
    var current_myth = 0;
    // Keep score
    //var myth_score = 0;

    // Our DOM objects
    var mythbusters = document.getElementById("mythbusters");
    var mb_question = document.getElementById("mb-question");
    var mb_answer_options = document.getElementById("mb-answer-options");
    var mb_button_true = document.getElementById("mb-true");
    var mb_button_false = document.getElementById("mb-false");
    //var mb_correct = document.getElementById("mb-answer-correct");
    //var mb_incorrect = document.getElementById("mb-answer-incorrect");
    var mb_true = document.getElementById("mb-answer-true");
    var mb_false = document.getElementById("mb-answer-false");
    var mb_reason = document.getElementById("mb-reason");
    var mb_nav = document.getElementById("mb-nav");
    //var mb_button_prev = document.getElementById("mb-prev");
    var mb_button_next = document.getElementById("mb-next");
    //var mb_progress = document.getElementById("mb-progress-current-question");
    //var mb_progress_total = document.getElementById("mb-progress-total-questions");
    //var mb_score = document.getElementById("mb-score-correct-answers");
    //var mb_score_total = document.getElementById("mb-score-total-questions");

    // Initialise the system
    if ( 0 < myths.length ) {
        mbInit();
    }
    function mbInit() {
        // Sort out our counters
        //mb_progress_total.innerHTML = myths.length;
        //mb_score.innerHTML = '0';
        //mb_score_total.innerHTML = myths.length;

        // Get our buttons ready for action
        mb_button_true.addEventListener( 'click', function(e) {
            e.preventDefault();
            // start the answering process
            mbAnswer();
        });
        mb_button_false.addEventListener( 'click', function(e) {
            e.preventDefault();
            // start the answering process
            mbAnswer();
        });
        //mb_button_prev.addEventListener( 'click', function(e) {
        //    e.preventDefault();
        //    mbPrev( false );
        //});
        mb_button_next.addEventListener( 'click', function(e) {
            e.preventDefault();
            mbNext();
        });

        // Hide our previous button (because we're at the beginning)
        //disable( mb_button_prev );

        // Load the first question
        mbMove();

        // All ready so show the Myth busters section
        mythbusters.classList.remove("hidden");
    }
    // Manage answers
    function mbAnswer(answer) {
        // Set the current answer
        myth_answers[current_myth] = answer;

        // Hide our answer buttons
        hide( mb_answer_options );

        // Show the answer
        if ( 'true' == myths[current_myth].answer ) {
            show( mb_true );
        }
        else if ( 'false' == myths[current_myth].answer ) {
            show( mb_false );
        }

        // Show the reason
        mb_reason.innerHTML = myths[current_myth].reason;
        show( mb_reason );

        // Show our navigation buttons
        show( mb_nav );
    }
    // Move to the next question
    function mbNext() {
        // Move to the next myth
        if ( current_myth + 1 < myths.length ) {
            current_myth++;
        } else {
            current_myth = 0;
        }
        mbMove();
    }
    // When we remove perform some resetting
    function mbMove() {
            // Hide the answer bits
            hide( mb_true );
            hide( mb_false );
            hide( mb_reason );
            hide( mb_nav );

            // Show the new question and the answer options
            mb_question.innerHTML = myths[current_myth].question
            show( mb_answer_options );
    }
    // Utility functions to show/hide elements
    function show(element) {
        if ( hasClass(element, 'hidden' )) {
            element.classList.remove('hidden');
        }
    }
    function hide(element) {
        if ( ! hasClass(element, 'hidden' )) {
            element.classList.add('hidden');
        }
    }
    // Utility functions to enable/disable elements
    function enable(button) {
        if ( button.disabled ) {
            button.disabled = false;
        }
    }
    function disable(button) {
        if ( ! button.disabled ) {
            button.disabled = true;
        }
    }
    // Utility function to check if an element has a class
    function hasClass(element, className) {
        return (' ' + element.className + ' ').indexOf(' ' + className+ ' ') > -1;
    }
</script>